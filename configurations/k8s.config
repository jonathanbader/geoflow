directories {
    input_cube = "/app/results/geoflow_data/datacube/**/*{BOA,QAI}.tif"
    lucas_survey = "/app/results/geoflow_data/lucas/lucas_harmo_uf_2018.csv"
    lucas_geom = "/app/results/geoflow_data/lucas/lucas_geom.gpkg"
    lucas_subset_dir = "output/lucas/subset"
    final_outDir = "output/classification"
}

process {
    container = 'floriankaterndahl/geoflow:v0.9.2'
    scratch = true
    executor = 'k8s'
    cpus = 1

    withLabel: miniscule_memory {
        errorStrategy = 'retry'
        maxRetries = 5
        memory = { 100.MB * task.attempt }
    }

    withLabel: small_memory {
        errorStrategy = 'retry'
        maxRetries = 5
        memory = { 1.GB * task.attempt }

    }

    withLabel: medium_memory {
        errorStrategy = { sleep(Math.pow(2, task.attempt) * 200 as long); return 'retry' }
        maxRetries = 5
        memory = 15.GB
    }
}


report {
    file = 'output/meta/report.html'
}

dag {
    file = 'output/meta/dag.html'
}

trace {
    enabled = true
    sep = ','
    raw = true
    file = 'output/meta/trace.csv'
    fields = 'task_id,hostname,cpu_model,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action'
}

k8s {
    imagePullPolicy = 'IfNotPresent'
    runAsUser = 0
    fetchNodeName = true
    queueSize = 50
    dsl2 = true
}